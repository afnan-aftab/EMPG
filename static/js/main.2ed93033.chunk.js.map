{"version":3,"sources":["App.js","GetData.js","index.js"],"names":["App","useState","pageNumber","setPageNumber","size","setSize","b","arr","loading","setLoading","error","setError","pas","setPas","hasMore","setHasMore","useEffect","axios","method","url","String","then","res","prevPas","Set","data","map","x","_id","name","airline","id","country","logo","length","catch","e","console","log","GetData","observer","useRef","lastElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","pass","index","ref","class","src","alt","href","target","rel","url0","url1","ReactDOM","render","document","getElementById"],"mappings":"0KAGe,SAASA,IACtB,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACIC,EAAI,EACJC,EAAM,GAEV,ECNa,SAAiBH,EAAMF,GAElC,MAA8BD,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA0BR,oBAAS,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAsBV,mBAAS,IAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACA,EAA8BZ,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KAoBA,OAlBAC,qBAAU,WACNP,GAAW,GACXE,GAAS,GACTM,IAAM,CACFC,OAAQ,MACRC,IAAK,qDAAqDC,OAAOlB,GAAY,SAASkB,OAAOhB,KAC9FiB,MAAK,SAAAC,GACJT,GAAO,SAAAU,GACH,OAAO,YAAI,IAAIC,IAAJ,sBAAYD,GAAZ,YAAuBD,EAAIG,KAAKA,KAAKC,KAAI,SAAAC,GAAM,MAAO,CAAC,IAAMA,EAAEC,IAAK,KAAOD,EAAEE,KAAM,GAAKF,EAAEG,QAAQC,GAAI,QAAUJ,EAAEG,QAAQD,KAAM,QAAUF,EAAEG,QAAQE,QAAS,KAAOL,EAAEG,QAAQG,gBAE7LlB,EAAWO,EAAIG,KAAKA,KAAKS,OAAS,GAClCzB,GAAW,MACZ0B,OAAM,SAAAC,GACLzB,GAAS,GACT0B,QAAQC,IAAIF,QAEjB,CAAChC,EAAMF,IACVmC,QAAQC,IAAI1B,GACL,CAACJ,UAASE,QAAOE,MAAKE,WDd3ByB,CAAQnC,EAAMF,GAJhBU,EADF,EACEA,IACAE,EAFF,EAEEA,QACAJ,EAHF,EAGEA,MACAF,EAJF,EAIEA,QAGIgC,EAAWC,mBACXC,EAAiBC,uBAAY,SAAAC,GAC9BpC,IACAgC,EAASK,SAASL,EAASK,QAAQC,aACtCN,EAASK,QAAU,IAAIE,sBAAqB,SAAAC,GACvCA,EAAQ,GAAGC,gBAAkBnC,IAC9BX,GAAc,SAAA+C,GAAc,OAAIA,EAAiB,KACjD7C,EAAQ,OAGTuC,GAAMJ,EAASK,QAAQM,QAAQP,MACjC,CAACpC,EAASM,IAKb,OACE,qCACGF,EAAIc,KAAI,SAAC0B,EAAMC,GACd,IAAKA,EAAM,GAAG,IAAI,EAAE,CAClB,IAAIlC,EAAM,gDAAgDC,OAAOgC,EAAKxB,KACtE,OACE,qCACE,qBAAK0B,IAAKZ,EAAgBa,MAAM,YAAhC,SACE,qBAAKA,MAAM,yBAAX,SACE,sBAAKA,MAAM,YAAX,UACE,sBAAKA,MAAM,MAAX,UAEE,qBAAKA,MAAM,WAAX,SACE,qBAAKA,MAAM,wBAAwBC,IAAKJ,EAAKnB,KAAMwB,IAAI,WAGzD,sBAAKF,MAAM,WAAX,UACE,6BAAKH,EAAKpB,UACV,uBACA,oBAAGuB,MAAM,iBAAT,iBAA+BH,EAAKrB,MACpC,6BAAKqB,EAAKvB,aAGd,mBAAG6B,KAAMvC,EAAKwC,OAAO,SAASC,IAAI,aAAaL,MAAM,iBAArD,sBAIN,0BAIJ,GAAS,IAANjD,EAII,CACLC,EAAI,GAAK6C,EACT9C,EAAI,EACJ,IAAIuD,EAAO,gDAAgDzC,OAAOb,EAAI,GAAGqB,KACrEkC,EAAO,gDAAgD1C,OAAOb,EAAI,GAAGqB,KAEzE,OACE,qCACE,sBAAK2B,MAAM,MAAX,UAEE,qBAAKA,MAAM,WAAX,SACE,qBAAKA,MAAM,mBAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,wBAAwBC,IAAKjD,EAAI,GAAG0B,KAAMwB,IAAI,SAEzD,6BAAKlD,EAAI,GAAGyB,UACZ,uBACA,oBAAGuB,MAAM,iBAAT,iBAA+BhD,EAAI,GAAGwB,MACtC,6BAAKxB,EAAI,GAAGsB,OACZ,mBAAG6B,KAAMG,EAAMF,OAAO,SAASC,IAAI,aAAaL,MAAM,iBAAtD,sBAMN,qBAAKA,MAAM,WAAX,SACE,qBAAKA,MAAM,mBAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,wBAAwBC,IAAKjD,EAAI,GAAG0B,KAAMwB,IAAI,SAEzD,6BAAKlD,EAAI,GAAGyB,UACZ,uBACA,oBAAGuB,MAAM,iBAAT,iBAA+BhD,EAAI,GAAGwB,MACtC,6BAAKxB,EAAI,GAAGsB,OACZ,mBAAG6B,KAAMI,EAAMH,OAAO,SAASC,IAAI,aAAaL,MAAM,iBAAtD,yBAMR,0BAKN,OA/CEhD,EAAI,GAAK6C,EACT9C,IA8CK,QAGX,8BAAME,GAAW,eACjB,8BAAME,GAAS,aEhHrBqD,IAASC,OAAO,cAAChE,EAAD,IAASiE,SAASC,eAAe,W","file":"static/js/main.2ed93033.chunk.js","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport GetData from './GetData'\n\nexport default function App() {\n  const [pageNumber, setPageNumber] = useState(1)\n  const [size, setSize] = useState(7)\n  let b = 0\n  let arr = []\n\n  const {\n    pas,\n    hasMore,\n    error,\n    loading\n  } = GetData(size, pageNumber)\n\n  const observer = useRef()\n  const lastElementRef = useCallback(node => {\n    if(loading) return\n    if(observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if(entries[0].isIntersecting && hasMore){\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\n        setSize(7)\n      }\n    })\n    if(node) observer.current.observe(node)\n  }, [loading, hasMore])\n\n  \n\n\n  return (\n    <>\n      {pas.map((pass, index) => {\n        if ((index+1)%7===0){\n          let url = 'https://api.instantwebtools.net/v1/passenger/'+String(pass._id)\n          return (\n            <>\n              <div ref={lastElementRef} class=\"col-sm-12\">\n                <div class=\"h-300 card text-center\">\n                  <div class=\"card-body\">\n                    <div class=\"row\">\n\n                      <div class=\"col-sm-6\">\n                        <img class=\"bIm rounded img-fluid\" src={pass.logo} alt=\"Logo\"></img>\n                  \n                      </div>\n                      <div class=\"col-sm-6\">\n                        <h4>{pass.country}</h4>\n                        <br></br>\n                        <p class=\"text-secondary\">id: {pass.id}</p>\n                        <h5>{pass.name}</h5>\n                      </div>\n                    </div>\n                    <a href={url} target=\"_blank\" rel=\"noreferrer\" class=\"stretched-link\"> </a>\n                  </div>\n                </div>\n              </div>\n              <br></br>\n            </>\n          )\n        } else {\n          if(b === 0)\n          {\n            arr[0] = pass\n            b++\n          } else {\n            arr[1] = pass\n            b = 0\n            let url0 = 'https://api.instantwebtools.net/v1/passenger/'+String(arr[0]._id)\n            let url1 = 'https://api.instantwebtools.net/v1/passenger/'+String(arr[1]._id)\n\n            return (\n              <>\n                <div class=\"row\">\n\n                  <div class=\"col-sm-6\">\n                    <div class=\"card text-center\">\n                      <div class=\"card-body\">\n                        <img class=\"sIm rounded img-fluid\" src={arr[0].logo} alt=\"Logo\"></img>\n                        \n                        <h4>{arr[0].country}</h4>\n                        <br></br>\n                        <p class=\"text-secondary\">id: {arr[0].id}</p>\n                        <h5>{arr[0].name}</h5>\n                        <a href={url0} target=\"_blank\" rel=\"noreferrer\" class=\"stretched-link\"> </a>\n    \n    \n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"card text-center\">\n                      <div class=\"card-body\">\n                        <img class=\"sIm rounded img-fluid\" src={arr[1].logo} alt=\"Logo\"></img>\n                        \n                        <h4>{arr[1].country}</h4>\n                        <br></br>\n                        <p class=\"text-secondary\">id: {arr[1].id}</p>\n                        <h5>{arr[1].name}</h5>\n                        <a href={url1} target=\"_blank\" rel=\"noreferrer\" class=\"stretched-link\"> </a>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n                <br></br>\n              </>\n            )\n\n          }\n          return null\n        }\n      })} \n      <div>{loading && 'Loading...'}</div>\n      <div>{error && 'Error'}</div>\n    </>\n  );\n}","import {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function GetData(size, pageNumber) {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n    const [pas, setPas] = useState([])\r\n    const [hasMore, setHasMore] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        setError(false)\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://api.instantwebtools.net/v1/passenger?page='+String(pageNumber)+'&size='+String(size)\r\n        }).then(res => {\r\n            setPas(prevPas => {\r\n                return [...new Set([...prevPas,...res.data.data.map(x => {return {\"_id\":x._id, \"name\":x.name, \"id\":x.airline.id, \"airName\":x.airline.name, \"country\":x.airline.country, \"logo\":x.airline.logo}} )])]\r\n            })\r\n            setHasMore(res.data.data.length > 0)\r\n            setLoading(false)\r\n        }).catch(e => {\r\n            setError(true)\r\n            console.log(e)\r\n        })\r\n    }, [size, pageNumber])\r\n    console.log(pas)\r\n    return {loading, error, pas, hasMore}\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}